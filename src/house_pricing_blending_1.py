# -*- coding: utf-8 -*-
"""House_Pricing_blending_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PbyxdN53kGIA9-S9I12et4WvU5ISZFHX

Following:
1. House_Pricing_8
2. House_Pricing_9
3. House_Pricing_11
4. House_Pricing_12
5. House_Pricing_7
6. House_Pricing_4_new
7. House_Pricing_13
8. House_Pricing_14

Kaggle: 
Kaggle: 0.11383
"""

# from google.colab import drive
# drive.mount('/content/drive')

# cd /content/drive/MyDrive/ML_2020/house-prices-advanced-regression-techniques

# ls

import numpy as np  # linear algebra
import pandas as pd  #
import sys

# model_7 = pd.read_csv('submission_7.csv')
mydir = sys.argv[1]
model_8 = pd.read_csv(mydir + 'submission_8.csv')
model_9 = pd.read_csv(mydir + 'submission_9.csv')
# model_11 = pd.read_csv('submission_11.csv')
model_12 = pd.read_csv(mydir + 'submission_12.csv')
model_13 = pd.read_csv(mydir + 'submission_13.csv')
# model_4_new = pd.read_csv('submission_4_new.csv')
model_14 = pd.read_csv(mydir + 'submission_14.csv')

model_new = model_8.copy()


# model_new.iloc[:,1] = np.floor( (0.10 * model_8.iloc[:,1]) + (0.15 * model_8.iloc[:,1]) \
#                                + (0.10 * model_9.iloc[:,1]) + (0.0 * model_11.iloc[:,1]) + (0.15 * model_12.iloc[:,1]) \
#                                + (0.50 * model_13.iloc[:,1]) )

model_new.iloc[:,1] = np.floor( (0.25 * model_8.iloc[:,1]) \
                               + (0.05 * model_9.iloc[:,1]) + (0.15 * model_12.iloc[:,1]) \
                               + (0.50 * model_13.iloc[:,1]) + (0.05 * model_14.iloc[:,1]))

# model_new.iloc[:,1] = np.floor( (0.0 * model_8.iloc[:,1]) + (0. * model_8.iloc[:,1]) \
#                                + (0.0 * model_9.iloc[:,1]) + (0.0 * model_11.iloc[:,1]) + (0. * model_12.iloc[:,1]) \
#                                + (0. * model_13.iloc[:,1]) + (1 * model_13.iloc[:,1]))

# model_new.to_csv("submission.csv", index=False)

# Brutal approach to deal with predictions close to outer range 
q1 = model_new['SalePrice'].quantile(0.0042)
q2 = model_new['SalePrice'].quantile(0.9999)

model_new['SalePrice'] = model_new['SalePrice'].apply(lambda x: x if x > q1 else x*1.0)
model_new['SalePrice'] = model_new['SalePrice'].apply(lambda x: x if x < q2 else x*.25)

model_new.to_csv(sys.argv[2], index=False)
# model_new.to_csv("submission.csv", index=False)





# """Plot"""

# test = pd.read_csv('test.csv')
# train = pd.read_csv('train.csv')
# test['SalePrice'] = model_new['SalePrice']

# import matplotlib.pyplot as plt
# import seaborn as sns

# features=['MSSubClass', 'LotFrontage', 'LotArea', 'OverallQual', 'OverallCond',
#        'YearBuilt', 'YearRemodAdd', 'MasVnrArea', 'BsmtFinSF1', 'BsmtFinSF2',
#        'BsmtUnfSF', 'TotalBsmtSF', '1stFlrSF', '2ndFlrSF', 'LowQualFinSF',
#        'GrLivArea', 'BsmtFullBath', 'BsmtHalfBath', 'FullBath', 'HalfBath',
#        'BedroomAbvGr', 'KitchenAbvGr', 'TotRmsAbvGrd', 'Fireplaces',
#        'GarageYrBlt', 'GarageCars', 'GarageArea', 'WoodDeckSF', 'OpenPorchSF',
#        'EnclosedPorch', '3SsnPorch', 'ScreenPorch', 'PoolArea', 'MiscVal',
#        'MoSold', 'YrSold']

# features_1 = features + ["ExterQual", "ExterCond", "BsmtCond", "HeatingQC", "KitchenQual",
#             "FireplaceQu","GarageQual","GarageCond", "BsmtQual", 'Fence', 'MiscFeature', "PoolQC", "Alley", "Utilities", "Street", "MSZoning"]



# n=1
# plt.figure(figsize=[24,50])
# for f in features_1:
#     plt.subplot(25,4,n)
#     sns.scatterplot(x=f, y='SalePrice', data= train, label = 'train')
#     sns.scatterplot(x=f, y='SalePrice', data= test, label = 'test')
#     plt.legend()
#     n = n + 1

# plt.tight_layout()
# plt.show()

